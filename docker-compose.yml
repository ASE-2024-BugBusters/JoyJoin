version: "1"
services:

### Databases ###
  postgres-event:
    container_name: postgres-event
    image: postgres
    environment:
      POSTGRES_DB: eventService
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
    volumes:
      - ./postgres-event:/data/postgres
    expose:
      - "5434"
    ports:
      - "5434:5434"
    command: -p 5434
    restart: unless-stopped

  postgres-post:
    container_name: postgres-post
    image: postgres
    environment:
      POSTGRES_DB: postService
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
    volumes:
      - ./postgres-post:/data/postgres
    expose:
      - "5435"
    ports:
      - "5435:5435"
    command: -p 5435
    restart: unless-stopped

  postgres-user:
    container_name: postgres-user
    image: postgres
    environment:
      POSTGRES_DB: userService
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
    volumes:
      - ./postgres-user:/data/postgres
    expose:
      - "5436"
    ports:
      - "5436:5436"
    command: -p 5436
    restart: unless-stopped


### Micro Services ###
#  registry-service:
#    image: josip97/registry-service:latest
#    container_name: registry-service
#    pull_policy: always
#    ports:
#      - "8761:8761"
#
#  api-gateway:
#    image: josip97/api-gateway:latest
#    container_name: api-gateway
#    pull_policy: always
#    ports:
#      - "9191:9191"
#    expose:
#      - "9191"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
#    depends_on:
#      registry-service:
#        condition: service_started
#
#  event-service:
#    image: josip97/event-service:latest
#    container_name: event-service
#    pull_policy: always
#    ports:
#      - "8084:8084"
#    expose:
#      - "8084"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
#    depends_on:
#      postgres-event:
#        condition: service_started
#      registry-service:
#        condition: service_started
#      api-gateway:
#        condition: service_started
#
#  post-service:
#    image: josip97/post-service:latest
#    container_name: post-service
#    pull_policy: always
#    ports:
#      - "8085:8085"
#    expose:
#      - "8085"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
#    depends_on:
#      postgres-post:
#        condition: service_started
#      registry-service:
#        condition: service_started
#      api-gateway:
#        condition: service_started
#
#  user-service:
#    image: josip97/user-service:latest
#    container_name: user-service
#    pull_policy: always
#    ports:
#      - "8086:8086"
#    expose:
#      - "8086"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
#    depends_on:
#      postgres-user:
#        condition: service_started
#      registry-service:
#        condition: service_started
#      api-gateway:
#        condition: service_started

### Frontend ###
#  frontend:
#    image: josip97/frontend:latest
#    container_name: frontend
#    pull_policy: always
#    ports:
#      - "3005:3005"
#    expose:
#      - "3005"
